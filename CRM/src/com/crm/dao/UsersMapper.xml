<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="com.crm.dao.UsersMapper">
 	 <resultMap type="users" id="selectUser">
 		<id property="uid" column="uid"/>
 		<result property="LonginName" column="LonginName"/>
 		<result property="PassWord" column="PassWord"/>
 		<result property="IsLockout" column="IsLockout"/>
 		<result property="LastLoginTime" column="LastLoginTime"/>
 		<result property="CreateTime" column="CreateTime"/>
 		<result property="PsdWrongTime" column="PsdWrongTime"/>
 		<result property="LockTime" column="LockTime"/>
 		<result property="ProtectEMail" column="ProtectEMail"/>
 		<result property="ProtectMTel" column="ProtectMTel"/>
 		<result property="roles.rid" column="rid"/>
 		<result property="roles.RoleName" column="RoleName"/>
 		<result property="userRoles.userid" column="userid"/>
 		<result property="userRoles.roleid" column="roleid"/>
 	</resultMap> 
 	
 	<resultMap type="roles" id="selectRolesByUser">
 		<id property="rid" column="rid"/>
 		<result property="RoleName" column="RoleName"/>
 	</resultMap>
 	
 	<resultMap type="userRoles" id="selectRolesByName">
 		<id property="urid" column="urid"/>
 		<result property="userid" column="userid"/>
 		<result property="roleid" column="roleid"/>
 		<result property="rid" column="rid"/>
 		<result property="RoleName" column="RoleName"/>
 	</resultMap>
 	
 	<resultMap type="student" id="selectStudent">
 		<id property="sid" column="sid"/>
 		<result property="Sname" column="Sname"/>
 		<result property="Age" column="Age"/>
 		<result property="Sex" column="Sex"/>
 		<result property="Phone" column="Phone"/>
 		<result property="StuStatus" column="StuStatus"/>
 		<result property="PerStatus" column="PerStatus"/>
 		<result property="MsgSource" column="MsgSource"/>
 		<result property="SourceUrl" column="SourceUrl"/>
 		<result property="SourceKeyWord" column="SourceKeyWord"/>
 		<result property="Address" column="Address"/>
 		<result property="NetPusherId" column="NetPusherId"/>
 		<result property="AskerId" column="AskerId"/>
 		<result property="QQ" column="QQ"/>
 		<result property="WeiXin" column="WeiXin"/>
 		<result property="Content" column="Content"/>
 		<result property="CreatTimes" column="CreatTimes"/>
 		<result property="LearnForword" column="LearnForword"/>
 		<result property="IsValid" column="IsValid"/>
 		<result property="Reoord" column="Reoord"/>
 		<result property="IsReturnVisit" column="IsReturnVisit"/>
 		<result property="FirstVisitTime" column="FirstVisitTime"/>
 		<result property="isHome" column="isHome"/>
 		<result property="homeTime" column="homeTime"/>
 		<result property="LostValid" column="LostValid"/>
 		<result property="IsPay" column="IsPay"/>
 		<result property="PayTime" column="PayTime"/>
 		<result property="Money" column="Money"/>
 		<result property="isReturnMoney" column="isReturnMoney"/>
 		<result property="isInClass" column="isInClass"/>
 		<result property="inClassTime" column="inClassTime"/>
 		<result property="inClassContent" column="inClassContent"/>
 		<result property="AskerContent" column="AskerContent"/>
 		<result property="isDel" column="isDel"/>
 		<result property="FromPart" column="FromPart"/>
 		<result property="stuConcern" column="stuConcern"/>
 		<result property="isBaoBei" column="isBaoBei"/>
 		<result property="AskName" column="AskName"/>
 		<result property="RoleNames" column="RoleNames"/>
 	</resultMap>
 	
 	
 	<sql id="sql">
 		<where>
 			<if test="users.LonginName !=null and users.LonginName!=''">
 				and LonginName like "%"#{users.LonginName}"%"
 			</if>
 			<if test="users.IsLockout !=null and users.IsLockout!=''">
 				and IsLockout=#{users.IsLockout}
 			</if>
 		    <if test="beginDates!=null and beginDates!=''">
 			    and CreateTime &gt;=#{beginDates}
 			</if>
 			<if test="endDates!=null and endDates!=''">
 			    and CreateTime &lt;=#{endDates}
 			</if> 
 		</where> 
 	</sql>
 	<select id="selectUser" resultMap="selectUser" parameterType="fenye">
 		SELECT * FROM users 
 		<include refid="sql"></include>
 		   order by uid desc
 		 limit #{page},#{pageSize}
 	</select>
 	<select id="selectCount" resultType="int" parameterType="fenye">
 		select count(uid) from users 
 		<include refid="sql"></include>
 	</select>
 	
 	<select id="selectUserName" parameterType="users" resultType="users">
 		select * from users where LonginName=#{LonginName}
 	</select>
 	<!-- 添加用户 -->
 	<insert id="insertUser" parameterType="users">
 		INSERT INTO users(LonginName,PassWord,CreateTime,ProtectEMail,ProtectMTel,IsLockout,PsdWrongTime) VALUES(#{LonginName},md5('ysd123'),#{CreateTime},#{ProtectEMail},#{ProtectMTel},'否',1);
 	</insert>
 	
 <!-- 查询该用户下有没有学生 -->
 	<select id="selectStudent" parameterType="int" resultMap="selectStudent">
 	     SELECT * FROM users u,student s where u.uid=#{uid} and u.uid=s.askerId
 	</select>	
 <!-- 查询该用户的角色 -->
 <select id="selectRoleNameByRole" parameterType="int" resultMap="selectRolesByUser">
       SELECT r.RoleName from users u,roles r,userroles ur
		WHERE u.uid=ur.UserId and r.rid=ur.RoleId 
		  AND u.uid=#{uid}
 </select>
 <!--查询是否有这个咨询师  -->
 <select id="selectAskName" parameterType="string" resultType="ask">
   SELECT * FROM askteacher WHERE AskName=#{askName}
 </select>
 <!-- 删除用户 -->
   <delete id="delUser" parameterType="int">
       delete from users where uid=#{uid}
  </delete>
  <!--根据名字删除咨询师  -->
  <delete id="delAsker" parameterType="string">
      delete FROM askteacher WHERE AskName=#{askName}
  </delete>
<!--   修改用户 -->
<update id="updateUser" parameterType="users">
  update users
   <set>
     <if test="LonginName!=null and LonginName!=''">
         LonginName=#{LonginName},
     </if>
     <if test="ProtectEMail!=null and ProtectEMail!=''">
         ProtectEMail=#{ProtectEMail},
     </if>
     <if test="ProtectMTel!=null and ProtectMTel!=''">
         ProtectMTel=#{ProtectMTel},
     </if>
   </set>
   <where>
        <if test="uid!=null and uid!=''">
             uid=#{uid}
        </if>
   </where>
</update>
<!-- 查询该用户的角色 -->
<select id="selectRoleNameBy" parameterType="string" resultMap="selectRolesByUser">
    SELECT * from users u,roles r,userroles ur
		WHERE u.uid=ur.UserId and r.rid=ur.RoleId 
		  AND u.LonginName=#{LonginName}
</select>
<!-- 锁定用户 -->
<update id="lockUser" parameterType="users">
 update users set IsLockout='是' where IsLockout= '否' AND LonginName=#{LonginName}
</update>

<!-- 解锁用户 -->
<update id="unlockUser" parameterType="users">
   update users  set IsLockout='否' where IsLockout= '是' AND LonginName=#{LonginName}
</update>

<!-- 重置密码 -->
<update id="chongzhiPwd" parameterType="users">
      update users  set PassWord=md5('ysd123') where LonginName=#{LonginName}
</update>
<!-- 根据用户名查询当前用户的角色 -->
 <select id="selectRoles" parameterType="string" resultMap="selectUser">
     SELECT * from users u,roles r,userroles ur
		WHERE u.uid=ur.UserId and r.rid=ur.RoleId 
	 and u.LonginName=#{LonginName}
</select> 

<!-- 为用户设置角色 -->
<insert id="addUserRoles" parameterType="userRoles" >
    INSERT INTO userroles(userid,roleid) VALUES(#{userid},#{roleid})
</insert>
<!-- 查询该用户是否拥有该角色 -->
<select id="selectUserRoles" parameterType="userRoles" resultType="userRoles">
	select * from userroles where userid=#{userid} and roleid=#{roleid}
</select>
<!-- 查询咨询经理有没有被引用 -->
<select id="selectUserRolesByRoleName" parameterType="userRoles" resultMap="selectRolesByName"  >
    SELECT * from users u,roles r,userroles ur
		WHERE u.uid=ur.UserId and r.rid=ur.RoleId
		  AND r.roleName='咨询师经理' and ur.roleid=#{roleid}
</select>
<!-- 查询用户名 -->
<select id="selectUsersName" parameterType="int" resultType="users">
    SELECT * FROM users where uid =#{uid}
</select>
<!-- 查询角色名 -->
<select id="selectRolesName" parameterType="int" resultType="roles">
    SELECT * FROM roles where rid =#{rid}
</select>

<!-- 移除用户角色 -->
<delete id="delUserRoles" parameterType="userRoles">
   delete from userroles where userid=#{userid} and roleid=#{roleid} 
</delete>

<!-- 添加资讯师 -->
 <insert id="addAsk" parameterType="ask">
      INSERT into askteacher(AskName,RoleNames,CheckInTime,Weights,BakContent) VALUES(#{askName},#{roleNames},#{checkInTime},5,'已开启')
</insert>

<!-- 删除资讯师 -->
 <delete id="delAsk" parameterType="ask" >
     DELETE FROM askteacher WHERE AskName=#{askName} and RoleNames=#{roleNames}
</delete> 

 </mapper>